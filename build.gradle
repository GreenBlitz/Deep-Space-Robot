plugins {
    id "java"
    id "edu.wpi.first.GradleRIO" version "2019.3.2"
    id 'org.hidetake.ssh' version '2.9.0'
}

def ROBOT_MAIN_CLASS = "edu.greenblitz.robotname.Robot"

deploy {
    targets {
        roboRIO("roborio") {
            team = frc.getTeamNumber()
        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            debug = frc.getDebugOrDefault(false)
        }

        fileTreeArtifact('frcStaticFileDeploy') {
            files = fileTree(dir: 'src/main/deploy')
            targets << "roborio"
            directory = '/home/lvuser/deploy'
        }
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    mavenCentral()
}

remotes {
    pi {
        host = '10.45.90.8'     // static IP
        port = 5809             // Port which gets throw the FMS
        user = 'pi'             
        password = 'raspberry'  // Saving a password in plaintext, not my proudest moment :(
    }
}

task do_vision {
    doLast {
        ssh.run {
            session(remotes.pi) {
                execute 'cd "Python Vision 2018-19"'
                execute './do_vision'
            }
        }
    }
}

tasks.deploy.dependsOn(do_vision)

dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    compile 'com.github.GreenBlitz.MotionControl:motion:2d4f8c65e62a32b0ba1351508fffbba379617e56'
    compile group: 'com.google.guava', name: 'guava', version: '11.0.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}

test {
    useJUnitPlatform()
}

